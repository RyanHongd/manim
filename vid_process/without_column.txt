*請你幫我調整參數和函式的順序，以符合題目的要求，其他都不要更改，你只能改MainScen2裡的內容，最後給我一個manim影片的程式碼 
*add處理加法，minus處理減法，multiplication處理乘法，division處理除法，write_text處理文字
*請你把不需要的運算方式刪掉，同時更改pos，以符合運算順序
*注意乘數被乘數，除數被除數的關係
*請妳回覆時不要給我多餘的文字，直接給我程式碼
以下是要回覆的文字：

import os
from manim import *
import subprocess
import platform
from add import add
from minus import minus
from multiplication import multiplication
from division import division
from write import write_text

class MainScene2(Scene):
    def construct(self):
        #載入不同函式運算時使用的參數，pos是運算的順序，先用到的改1，後用到的改2
        add_pos, min_pos, mup_pos, div_pos= 0, 0, 0, 0

        #把要運算的數字填入，如果是多種運算方式的結合，你要在第二個運算中，放入第一個運算的結果
        #以下是舉例不要真的填入：例如8*2-3=15，你就要在mup_value1填入8, mup_value2填入2，然後運算結果為16，所以接下來要在min_value1填入16，min_value2填入3
        #乘除法填入的第一個數字，單位要和答案的相同
        add_value1, add_value2 = 0, 0  
        min_value1, min_value2 = 0, 0
        mup_value1, mup_value2 = 0, 0
        div_value1, div_value2 = 0, 0



        #標題的內容，你要修改title以符合題目的敘述
        title = f"放入題目"
        title_pos = UP
        title_width = 14

        #答案的內容，你要修改answer以符合正確的答案，不要有小數點，我希望answer是一段敘述
        answer = f"放入答案"
        answer_pos = DOWN
        answer_width = 4

        #創建需要的場景，把需要的運算方式留著就好，剩餘的刪掉，要記得載入pos
        title = write_text(title,title_pos,title_width)
        add_scene = add(add_value1, add_value2, add_pos)
        minus_scene = minus(min_value1, min_value2, min_pos)
        multiplication_scene =  multiplication(mup_value1, mup_value2, mup_pos)
        division_scene = division(div_value1, div_value2, div_pos)
        answer = write_text(answer,answer_pos,answer_width)

        # 執行動畫，把需要的運算方式留著就好，剩餘的刪掉
        title.animation(self)
        add_scene.animation(self)
        minus_scene.animation(self)
        multiplication_scene.animation(self)
        division_scene.animation(self)
        answer.animation(self)
        


#下面的內容固定，不會影響影片的內容
if __name__ == "__main__":
    config.media_dir = "./output_media"
    config.pixel_height = 1080
    config.pixel_width = 1920
    config.frame_rate = 60

    # 渲染影片
    scene = MainScene2()
    scene.render()

    # 找到生成的影片路徑
    output_video_path = os.path.join(config.media_dir, "videos", "1080p60", "MainScene2.mp4")
    
    # 自動打開影片
    if platform.system() == "Windows":
        os.startfile(output_video_path)  # Windows 自動打開影片
    elif platform.system() == "Darwin":  # MacOS
        subprocess.run(["open", output_video_path])
    elif platform.system() == "Linux":  # Linux
        subprocess.run(["xdg-open", output_video_path])